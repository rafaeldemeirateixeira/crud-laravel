version: '3.8'
services:
  application:
    container_name: application
    build: .
    restart: always
    labels:
      - "traefik.enable=false"
    tty: true
    volumes:
      - ./:/var/www
    networks:
      - internal

  # mysql:
  #   image: mysql:5.7.22
  #   restart: always
  #   labels:
  #     - "traefik.enable=false"
  #   tty: true
  #   ports:
  #     - "3306"
  #   networks:
  #     - internal
  #   volumes:
  #     - "./.docker/dbdata:/var/lib/mysql"
  #   environment:
  #     MYSQL_DATABASE: application
  #     MYSQL_ROOT_PASSWORD: secret

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.nginx.rule=Host(`staging.api.rasteixeira.ga`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=letsencrypt"
    volumes:
      - ./:/var/www
      - ./.docker/services/nginx/staging.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/nginx:/var/log/nginx
    networks:
      - web
      - internal
    depends_on:
      - application

  redis:
    container_name: redis
    image: redis:latest
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
    networks:
      - internal
      - web
    volumes:
      - redis_data:/data

networks:
  web:
    external: true
  internal:
    external: false

volumes:
  redis_data:
